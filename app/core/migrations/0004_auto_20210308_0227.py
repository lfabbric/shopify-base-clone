# Generated by Django 3.1.7 on 2021-03-08 02:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('core', '0003_store_slug'),
    ]

    operations = [
        migrations.AlterField(
            model_name='store',
            name='title',
            field=models.CharField(max_length=35, verbose_name='title'),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=35, verbose_name='title')),
                ('slug', models.SlugField(max_length=40, unique=True)),
                ('body', models.TextField(verbose_name='body')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('taxable', models.BooleanField(default=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('purchased', models.PositiveIntegerField(default=0)),
                ('stock', models.PositiveIntegerField()),
                ('length', models.FloatField(default=0.5, verbose_name='Length')),
                ('fulfillment', models.CharField(choices=[('MANUAL', 'Manual'), ('AUTOMATIC', 'Automatic')], default='MANUAL', max_length=9, verbose_name='Fulfillment Service')),
                ('published', models.BooleanField(default=False)),
                ('date_available', models.DateTimeField(auto_now_add=True, verbose_name='Available')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.store')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
